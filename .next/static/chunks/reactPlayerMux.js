/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["reactPlayerMux"],{

/***/ "./node_modules/react-player/lib/players/Mux.js":
/*!******************************************************!*\
  !*** ./node_modules/react-player/lib/players/Mux.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Mux_exports = {};\r\n__export(Mux_exports, {\r\n  default: () => Mux\r\n});\r\nmodule.exports = __toCommonJS(Mux_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://cdn.jsdelivr.net/npm/@mux/mux-player@VERSION/dist/mux-player.mjs\";\r\nclass Mux extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    // Proxy methods to prevent listener leaks\r\n    __publicField(this, \"onReady\", (...args) => this.props.onReady(...args));\r\n    __publicField(this, \"onPlay\", (...args) => this.props.onPlay(...args));\r\n    __publicField(this, \"onBuffer\", (...args) => this.props.onBuffer(...args));\r\n    __publicField(this, \"onBufferEnd\", (...args) => this.props.onBufferEnd(...args));\r\n    __publicField(this, \"onPause\", (...args) => this.props.onPause(...args));\r\n    __publicField(this, \"onEnded\", (...args) => this.props.onEnded(...args));\r\n    __publicField(this, \"onError\", (...args) => this.props.onError(...args));\r\n    __publicField(this, \"onPlayBackRateChange\", (event) => this.props.onPlaybackRateChange(event.target.playbackRate));\r\n    __publicField(this, \"onEnablePIP\", (...args) => this.props.onEnablePIP(...args));\r\n    __publicField(this, \"onSeek\", (e) => {\r\n      this.props.onSeek(e.target.currentTime);\r\n    });\r\n    __publicField(this, \"onDurationChange\", () => {\r\n      const duration = this.getDuration();\r\n      this.props.onDuration(duration);\r\n    });\r\n    __publicField(this, \"mute\", () => {\r\n      this.player.muted = true;\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.player.muted = false;\r\n    });\r\n    __publicField(this, \"ref\", (player) => {\r\n      this.player = player;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n    this.addListeners(this.player);\r\n    const playbackId = this.getPlaybackId(this.props.url);\r\n    if (playbackId) {\r\n      this.player.playbackId = playbackId;\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    this.player.playbackId = null;\r\n    this.removeListeners(this.player);\r\n  }\r\n  addListeners(player) {\r\n    const { playsinline } = this.props;\r\n    player.addEventListener(\"play\", this.onPlay);\r\n    player.addEventListener(\"waiting\", this.onBuffer);\r\n    player.addEventListener(\"playing\", this.onBufferEnd);\r\n    player.addEventListener(\"pause\", this.onPause);\r\n    player.addEventListener(\"seeked\", this.onSeek);\r\n    player.addEventListener(\"ended\", this.onEnded);\r\n    player.addEventListener(\"error\", this.onError);\r\n    player.addEventListener(\"ratechange\", this.onPlayBackRateChange);\r\n    player.addEventListener(\"enterpictureinpicture\", this.onEnablePIP);\r\n    player.addEventListener(\"leavepictureinpicture\", this.onDisablePIP);\r\n    player.addEventListener(\"webkitpresentationmodechanged\", this.onPresentationModeChange);\r\n    player.addEventListener(\"canplay\", this.onReady);\r\n    if (playsinline) {\r\n      player.setAttribute(\"playsinline\", \"\");\r\n    }\r\n  }\r\n  removeListeners(player) {\r\n    player.removeEventListener(\"canplay\", this.onReady);\r\n    player.removeEventListener(\"play\", this.onPlay);\r\n    player.removeEventListener(\"waiting\", this.onBuffer);\r\n    player.removeEventListener(\"playing\", this.onBufferEnd);\r\n    player.removeEventListener(\"pause\", this.onPause);\r\n    player.removeEventListener(\"seeked\", this.onSeek);\r\n    player.removeEventListener(\"ended\", this.onEnded);\r\n    player.removeEventListener(\"error\", this.onError);\r\n    player.removeEventListener(\"ratechange\", this.onPlayBackRateChange);\r\n    player.removeEventListener(\"enterpictureinpicture\", this.onEnablePIP);\r\n    player.removeEventListener(\"leavepictureinpicture\", this.onDisablePIP);\r\n    player.removeEventListener(\"canplay\", this.onReady);\r\n  }\r\n  async load(url) {\r\n    var _a;\r\n    const { onError, config } = this.props;\r\n    if (!((_a = globalThis.customElements) == null ? void 0 : _a.get(\"mux-player\"))) {\r\n      try {\r\n        const sdkUrl = SDK_URL.replace(\"VERSION\", config.version);\r\n        await import(\r\n          /* webpackIgnore: true */\r\n          `${sdkUrl}`\r\n        );\r\n        this.props.onLoaded();\r\n      } catch (error) {\r\n        onError(error);\r\n      }\r\n    }\r\n    const [, id] = url.match(import_patterns.MATCH_URL_MUX);\r\n    this.player.playbackId = id;\r\n  }\r\n  play() {\r\n    const promise = this.player.play();\r\n    if (promise) {\r\n      promise.catch(this.props.onError);\r\n    }\r\n  }\r\n  pause() {\r\n    this.player.pause();\r\n  }\r\n  stop() {\r\n    this.player.playbackId = null;\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.player.currentTime = seconds;\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.player.volume = fraction;\r\n  }\r\n  enablePIP() {\r\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\r\n      this.player.requestPictureInPicture();\r\n    }\r\n  }\r\n  disablePIP() {\r\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\r\n      document.exitPictureInPicture();\r\n    }\r\n  }\r\n  setPlaybackRate(rate) {\r\n    try {\r\n      this.player.playbackRate = rate;\r\n    } catch (error) {\r\n      this.props.onError(error);\r\n    }\r\n  }\r\n  getDuration() {\r\n    if (!this.player)\r\n      return null;\r\n    const { duration, seekable } = this.player;\r\n    if (duration === Infinity && seekable.length > 0) {\r\n      return seekable.end(seekable.length - 1);\r\n    }\r\n    return duration;\r\n  }\r\n  getCurrentTime() {\r\n    if (!this.player)\r\n      return null;\r\n    return this.player.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    if (!this.player)\r\n      return null;\r\n    const { buffered } = this.player;\r\n    if (buffered.length === 0) {\r\n      return 0;\r\n    }\r\n    const end = buffered.end(buffered.length - 1);\r\n    const duration = this.getDuration();\r\n    if (end > duration) {\r\n      return duration;\r\n    }\r\n    return end;\r\n  }\r\n  getPlaybackId(url) {\r\n    const [, id] = url.match(import_patterns.MATCH_URL_MUX);\r\n    return id;\r\n  }\r\n  render() {\r\n    const { url, playing, loop, controls, muted, config, width, height } = this.props;\r\n    const style = {\r\n      width: width === \"auto\" ? width : \"100%\",\r\n      height: height === \"auto\" ? height : \"100%\"\r\n    };\r\n    if (controls === false) {\r\n      style[\"--controls\"] = \"none\";\r\n    }\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"mux-player\",\r\n      {\r\n        ref: this.ref,\r\n        \"playback-id\": this.getPlaybackId(url),\r\n        style,\r\n        preload: \"auto\",\r\n        autoPlay: playing || void 0,\r\n        muted: muted ? \"\" : void 0,\r\n        loop: loop ? \"\" : void 0,\r\n        ...config.attributes\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Mux, \"displayName\", \"Mux\");\r\n__publicField(Mux, \"canPlay\", import_patterns.canPlay.mux);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-player/lib/players/Mux.js\n"));

/***/ })

}]);