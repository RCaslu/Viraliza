/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["reactPlayerStreamable"],{

/***/ "./node_modules/react-player/lib/players/Streamable.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-player/lib/players/Streamable.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar Streamable_exports = {};\r\n__export(Streamable_exports, {\r\n  default: () => Streamable\r\n});\r\nmodule.exports = __toCommonJS(Streamable_exports);\r\nvar import_react = __toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\r\nvar import_utils = __webpack_require__(/*! ../utils */ \"./node_modules/react-player/lib/utils.js\");\r\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"./node_modules/react-player/lib/patterns.js\");\r\nconst SDK_URL = \"https://cdn.embed.ly/player-0.1.0.min.js\";\r\nconst SDK_GLOBAL = \"playerjs\";\r\nclass Streamable extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"duration\", null);\r\n    __publicField(this, \"currentTime\", null);\r\n    __publicField(this, \"secondsLoaded\", null);\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unmute\");\r\n    });\r\n    __publicField(this, \"ref\", (iframe) => {\r\n      this.iframe = iframe;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  load(url) {\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((playerjs) => {\r\n      if (!this.iframe)\r\n        return;\r\n      this.player = new playerjs.Player(this.iframe);\r\n      this.player.setLoop(this.props.loop);\r\n      this.player.on(\"ready\", this.props.onReady);\r\n      this.player.on(\"play\", this.props.onPlay);\r\n      this.player.on(\"pause\", this.props.onPause);\r\n      this.player.on(\"seeked\", this.props.onSeek);\r\n      this.player.on(\"ended\", this.props.onEnded);\r\n      this.player.on(\"error\", this.props.onError);\r\n      this.player.on(\"timeupdate\", ({ duration, seconds }) => {\r\n        this.duration = duration;\r\n        this.currentTime = seconds;\r\n      });\r\n      this.player.on(\"buffered\", ({ percent }) => {\r\n        if (this.duration) {\r\n          this.secondsLoaded = this.duration * percent;\r\n        }\r\n      });\r\n      if (this.props.muted) {\r\n        this.player.mute();\r\n      }\r\n    }, this.props.onError);\r\n  }\r\n  play() {\r\n    this.callPlayer(\"play\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pause\");\r\n  }\r\n  stop() {\r\n  }\r\n  seekTo(seconds, keepPlaying = true) {\r\n    this.callPlayer(\"setCurrentTime\", seconds);\r\n    if (!keepPlaying) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction * 100);\r\n  }\r\n  setLoop(loop) {\r\n    this.callPlayer(\"setLoop\", loop);\r\n  }\r\n  getDuration() {\r\n    return this.duration;\r\n  }\r\n  getCurrentTime() {\r\n    return this.currentTime;\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.secondsLoaded;\r\n  }\r\n  render() {\r\n    const id = this.props.url.match(import_patterns.MATCH_URL_STREAMABLE)[1];\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\r\n      \"iframe\",\r\n      {\r\n        ref: this.ref,\r\n        src: `https://streamable.com/o/${id}`,\r\n        frameBorder: \"0\",\r\n        scrolling: \"no\",\r\n        style,\r\n        allow: \"encrypted-media; autoplay; fullscreen;\"\r\n      }\r\n    );\r\n  }\r\n}\r\n__publicField(Streamable, \"displayName\", \"Streamable\");\r\n__publicField(Streamable, \"canPlay\", import_patterns.canPlay.streamable);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-player/lib/players/Streamable.js\n"));

/***/ })

}]);